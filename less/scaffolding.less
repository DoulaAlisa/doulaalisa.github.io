//
// Basic scaffolding and resets
//

// Set root font size

html {
    font-size: @font-size-root;
    @media (min-width: @screen-sm-min) {
        font-size: ceil((@font-size-root + 2));
    }
    @media (min-width: @screen-md-min) {
        font-size: ceil((@font-size-root + 4));
    }
}

// Change styling for elements that mix pixels and ems

pre {
  font-size: ( @font-size-base - (1 / @font-size-root) );
}

.form-control-feedback {
  width: calc(@input-height-base ~" + 2px");
  height: calc(@input-height-base ~" + 2px");
}
.input-lg + .form-control-feedback {
  width: calc(@input-height-large ~" + 2px");
  height: calc(@input-height-large ~" + 2px");
}
.input-sm + .form-control-feedback {
  width: calc(@input-height-small ~" + 2px");
  height: calc(@input-height-small ~" + 2px");
}

.form-control {
    height: calc(@input-height-base ~" + 2px");
}

.form-horizontal {
    .radio, .checkbox, .radio-inline, .checkbox-inline {
        padding: @padding-base-vertical;
        border: 1px solid transparent;
    }
    .radio, .checkbox {
        min-height: calc((@line-height-computed + @padding-base-vertical) ~"+ 1px");
    }
    .form-control-static {
        padding-top: @padding-base-vertical;
        border-top: 1px solid transparent;
        padding-bottom: @padding-base-vertical;
        border-bottom: 1px solid transparent;
    }

    @media (min-width: @screen-sm-min) {
        .control-label {
            padding-top: @padding-base-vertical;
            border-top: 1px solid transparent;
        }
    }
}


body {
    font-size: @font-size-base;
    font-weight: 200;
    &.template-theming-controlpanel .row {
        // Fix theming control panel
        margin: 0 @line-height-computed;
    }
}

// Set font weights if webfont is active
.ws-active {
    // Default twbs weight for headings 500 not provided by Open Sans
    @headings-font-weight: 700;
    b,
    strong {
        font-weight: 700;
    }
}

// prevent fake bolds
b,
strong {
    font-weight: 700;
    .ws-active & {
        font-weight: 700;
    }
}

a {
    outline: 0;
}

a:hover {
  .transition(color .5s linear);
}

p {
  margin: 0 0 @line-height-computed;
}

// SVG responsive implementation
// -----------------------------

// svg inline images need a dedicated container to be auto sizable
.svg-container {
    width: 100%;
    margin: 0 auto;
    background: #fff;
    border: 1px solid @app-primary;
}

// Add padding hack to position svg
// See: http://tympanus.net/Tutorials/ResponsiveSVGs/index4.html
.svg-container-ph {
  height: 0;
  // Calculate apect ratio (svg height / svg width) * width-value;
  padding-top: 48%;
  position: relative;
}

// Position <svg> element inside container
.svg-content {
    position: absolute;
    top: 0;
    left: 0;
}

